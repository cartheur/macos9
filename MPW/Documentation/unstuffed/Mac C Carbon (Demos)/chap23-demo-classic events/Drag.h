// *******************************************************************************************// Drag.h                                                                  CLASSIC EVENT MODEL// *******************************************************************************************//// This program demonstrates drag and drop utilising the Drag Manager.  Support for Undo and// Redo of drag and drop within the source window is included.//// The bulk of the code in the source code file Drag.c is identical to the code in the file// Text1.c in the Chapter 20 TextEdit demonstration program MonoTextEdit.//// The program utilises the following resources://// ╔  A 'plst' resource.//// ╔	An 'MBAR' resource, and 'MENU' resources for Apple, File, and Edit menus.//// ╔	A 'WIND' resource (purgeable) (initially visible).//// ╔	'CNTL' resources (purgeable) for the vertical scroll bars in the text editor window and//		Help dialog, and for the pop-up menu in the Help Dialog.//// ╔	A 'STR#' resource (purgeable) containing error text strings.//// ╔	A 'SIZE' resource with the acceptSuspendResumeEvents, canBackground, //		doesActivateOnFGSwitch, and isHighLevelEventAware flags set.//// *******************************************************************************************// ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии includes#include <Carbon.h>// иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии defines#define rMenubar					128#define mAppleApplication	128#define  iAbout						1#define mFile							129#define  iNew							1#define  iOpen						2#define  iClose						4#define  iSaveAs					6#define  iQuit						12#define mEdit							130#define  iUndo						1#define  iCut							3#define  iCopy						4#define  iPaste						5#define  iClear						6#define  iSelectAll				7#define rWindow						128#define rVScrollbar				128#define rErrorStrings			128#define  eMenuBar					1#define  eWindow					2#define  eDocStructure		3#define  eTextEdit				4#define  eExceedChara			5#define  eNoSpaceCut			6#define  eNoSpacePaste		7#define  eDragHandler			8#define  eDrag						9#define  eDragUndo				10#define kMaxTELength			32767#define kTab							0x09#define kDel							0x7F#define kReturn						0x0D#define topLeft(r)				(((Point *) &(r))[0])#define botRight(r)				(((Point *) &(r))[1])// ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии typedefstypedef struct{	TEHandle		textEditStrucHdl;	ControlRef	vScrollbarRef;	WindowRef		windowRef;	Boolean			windowTouched;	Handle			preDragText;	SInt16			preDragSelStart;	SInt16			preDragSelEnd;	SInt16			postDropSelStart;	SInt16			postDropSelEnd;} docStructure, *docStructurePointer;// иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии function prototypesvoid			main										(void);void			doPreliminaries					(void);OSErr			quitAppEventHandler			(AppleEvent *,AppleEvent *,SInt32);void			eventLoop								(void);void			doIdle									(void);void			doEvents								(EventRecord *);void			doKeyEvent							(SInt8);void  		scrollActionFunction		(ControlRef,SInt16);void			doInContent							(EventRecord *);void			doUpdate								(EventRecord *);void			doActivate							(EventRecord *);void			doActivateDocWindow			(WindowRef,Boolean);void			doOSEvent								(EventRecord *);WindowRef	doNewDocWindow					(void);Boolean		customClickLoop					(void);void			doSetScrollBarValue			(ControlRef,SInt16 *);void			doAdjustMenus						(void);void			doMenuChoice						(SInt32);void			doFileMenu							(MenuItemIndex);void			doEditMenu							(MenuItemIndex);SInt16		doGetSelectLength				(TEHandle);void			doAdjustScrollbar				(WindowRef);void			doAdjustCursor					(WindowRef);void			doCloseWindow						(WindowRef);void			doSaveAsFile						(TEHandle);void			doOpenCommand						(void);void			navEventFunction				(NavEventCallbackMessage,NavCBRecPtr,NavCallBackUserData);void			doOpenFile							(FSSpec);void			doErrorAlert						(SInt16);OSErr			doStartDrag							(EventRecord *,RgnHandle,TEHandle);OSErr 		dragTrackingHandler			(DragTrackingMessage,WindowRef,void *,DragRef);SInt16		doGetOffset							(Point,TEHandle);SInt16		doIsOffsetAtLineStart		(SInt16,TEHandle);void			doDrawCaret							(SInt16,TEHandle);SInt16		doGetLine								(SInt16,TEHandle);OSErr			dragReceiveHandler			(WindowRef,void *,DragRef);Boolean		doIsWhiteSpaceAtOffset	(SInt16,TEHandle);Boolean  	doIsWhiteSpace					(char);char			doGetCharAtOffset				(SInt16,TEHandle);SInt16		doInsertTextAtOffset		(SInt16,Ptr,SInt32,TEHandle);Boolean		doSavePreInsertionText	(docStructurePointer);void			doUndoRedoDrag					(WindowRef);// *******************************************************************************************