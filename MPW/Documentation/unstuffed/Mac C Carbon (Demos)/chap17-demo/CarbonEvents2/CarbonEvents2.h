// *******************************************************************************************// CarbonEvents2.h                                                          CARBON EVENT MODEL// *******************************************************************************************// // This program allows the user to://// ╔	Open, close, and interact with kWindowFullZoomGrowDocumentProc windows containing//		various controls.//// ╔	Open, close and interact with a movable modal dialog and, on Mac OS X only,	//		window-modal (sheet) alerts and window-modal (sheet) dialogs.//// The program demonstrates the main aspects of the Carbon Event model, specifically://// ╔	Events relating to menus, windows and controls, including the detection of mouse-downs//		in controls in document windows and movable modal dialogs.//// ╔	Keyboard events.//// ╔	Events relating to application activation and deactivation (resume and suspend in //		Classic event model parlance).//// ╔	The use of mouse-moved events in support of cursor adjustment functions.//// ╔	The installation of event loop timers (used, in this program, to trigger an "idle" //		function.//// The program also demonstrates the implementation of live window resizing. //// The window contains a window header frame in which is displayed the menu items chosen from // pop-up menu buttons, the identity of a push button when that push button is clicked, and// scroll bar control values when the scroll arrows or gray areas/track of the scroll bars are// clicked and when the scroll box/scroller is dragged.  (The vertical scroll bar is the // non-live feedback variant.  The horizontal scroll bar is the live-feedback variant.)  Text// extracted from the edit text item in the window-modal (sheet) dialog and the identity of // the button clicked in the window-modal (sheet) alert are also displayed in the window // header frame.//// The movable modal dialog serves the secondary purpose of proving window correct window // updating even though an event filter function is not used by the dialog.  //// The program utilises the following resources://// ╔	A 'plst' resource.//// ╔	An 'MBAR' resource, and 'MENU' resources for OS9Apple/Application, File, Edit, and //		Typing Target, and Dialogs menus, and the pop-up menus (preload, non-purgeable).  //// ╔	A 'WIND' resource (purgeable) (initially not visible).//// ╔	A 'DLOG' resource ((purgeable) (initially not visible), with associated 'DITL', 'dlgx' //		and 'dfnt' resources, for the window-modal (sheet) dialog.//// ╔	A 'CNTL' resource (purgeable) for an image well control in the window-modal (sheet)//		dialog.//// ╔	A 'STR#' resource (purgeable) containing text for the window-modal (sheet) alert. //// ╔	A 'SIZE' resource with the acceptSuspendResumeEvents, canBackground, //		doesActivateOnFGSwitch, and isHighLevelEventAware flags set.//// *******************************************************************************************// ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии includes#include <Carbon.h>// иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии defines#define rMenubar								128#define rWindow									128#define rAboutDialog						128#define mAppleApplication				128#define  iAbout									1#define mFile										129#define  iQuit									12#define  iNew										1#define  iClose									4#define mTyping									131#define  iDocument							1#define  iEditTextControl				2#define  iAllOfTheAbove					3#define mDialogs								132#define  iMovableModal					1#define  iSheetAlert						2#define  iSheetDialog						3#define mWindow									135#define rSheetDialog						128#define rSheetStrings						128#define  sAlertSheetMessage			1#define  sAlertSheetInformative	2#define kPopupCountryID					'ctry'#define kScrollBarWidth					15#define MIN(a,b) 								((a) < (b) ? (a) : (b))#define topLeft(r)							(((Point *) &(r))[0])#define botRight(r)							(((Point *) &(r))[1])// ииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии typedefstypedef struct{	ControlRef	popupTimeZoneRef;	ControlRef	popupCountryRef;	ControlRef	radiobuttonRedRef;	ControlRef	radiobuttonWhiteRef;	ControlRef	radiobuttonBlueRef;	ControlRef	groupboxColourRef;	ControlRef	groupboxTypingRef;	ControlRef	buttonRef;	ControlRef	buttonDefaultRef;	ControlRef	editTextRef;	ControlRef	scrollbarVertRef;	ControlRef	scrollbarHorizRef;} docStruc, **docStrucHandle;// иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии function prototypesvoid						main									(void);void						doPreliminaries				(void);OSStatus				appEventHandler				(EventHandlerCallRef,EventRef,void *);OSStatus				windowEventHandler		(EventHandlerCallRef,EventRef,void *);void						doNewWindow						(void);EventHandlerUPP	doGetHandlerUPP				(void);void						doCloseWindow					(WindowRef);void						doGetControls					(WindowRef);void						doIdle								(void);void						doAdjustMenus					(void);void						doMenuChoice					(MenuID,MenuItemIndex);void						doDrawContent					(WindowRef);void						doActivateDeactivate	(WindowRef,Boolean);void						doControlHit1					(WindowRef,ControlRef,Point,ControlPartCode);void						doControlHit2					(void);void						doPopupMenuChoice			(WindowRef,ControlRef,SInt16);void						doVertScrollbar				(ControlPartCode,WindowRef,ControlRef,Point);void						actionFunctionVert		(ControlRef,ControlPartCode);void						actionFunctionHoriz		(ControlRef,ControlPartCode);void						doMoveScrollBox				(ControlRef,SInt16);void						doRadioButtons				(ControlRef,WindowRef);void						doCheckboxes					(ControlRef);void						doPushButtons					(ControlRef,WindowRef);void						doAdjustScrollBars		(WindowRef);void						doAdjustCursor				(WindowRef);void						doDrawDocumentTyping	(SInt8,UInt32);void						doDrawMessage					(WindowRef,Boolean);void						doConcatPStrings			(Str255,Str255);void						doCopyPString					(Str255,Str255);OSStatus				doSheetAlert					(void);OSStatus				doSheetDialog					(void);EventHandlerUPP	doGetSheetHandlerUPP	(void);OSStatus				sheetEventHandler			(EventHandlerCallRef,EventRef,void *);OSStatus				doMovableModalDialog	(void);EventHandlerUPP doGetDialogHandlerUPP	(void);OSStatus				dialogEventHandler		(EventHandlerCallRef,EventRef,void *);// *******************************************************************************************